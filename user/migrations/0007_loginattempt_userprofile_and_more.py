# Generated by Django 5.2.6 on 2025-10-06 14:33

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('user', '0006_emailverificationcode'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('attempt_type', models.CharField(choices=[('password', 'Password Login'), ('email_code', 'Email Code Login'), ('google_oauth', 'Google OAuth')], max_length=15)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('blocked', 'Blocked')], max_length=10)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('failure_reason', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'login_attempts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(blank=True, help_text='Passport number', max_length=20)),
                ('passport_expiry', models.DateField(blank=True, help_text='Passport expiration date', null=True)),
                ('passport_country', models.CharField(blank=True, help_text='Passport issuing country', max_length=100)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('frequent_flyer_numbers', models.JSONField(blank=True, default=dict, help_text='Frequent flyer numbers for different airlines')),
                ('special_assistance', models.TextField(blank=True, help_text='Special assistance requirements')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('marketing_emails', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.AddField(
            model_name='emailverificationcode',
            name='code_type',
            field=models.CharField(choices=[('login', 'Login'), ('email_verify', 'Email Verification'), ('password_reset', 'Password Reset')], default='login', max_length=15),
        ),
        migrations.AddField(
            model_name='emailverificationcode',
            name='user_agent',
            field=models.TextField(blank=True, help_text='Browser/device info'),
        ),
        migrations.AddField(
            model_name='user',
            name='address_line1',
            field=models.CharField(blank=True, help_text='Street address', max_length=255),
        ),
        migrations.AddField(
            model_name='user',
            name='address_line2',
            field=models.CharField(blank=True, help_text='Apartment, suite, etc.', max_length=255),
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='country',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='date_of_birth',
            field=models.DateField(blank=True, help_text='Required for flight bookings', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='dietary_restrictions',
            field=models.TextField(blank=True, help_text='Special dietary requirements'),
        ),
        migrations.AddField(
            model_name='user',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1),
        ),
        migrations.AddField(
            model_name='user',
            name='is_email_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='is_phone_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='postal_code',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='preferred_seat_class',
            field=models.CharField(choices=[('economy', 'Economy'), ('premium_economy', 'Premium Economy'), ('business', 'Business'), ('first', 'First Class')], default='economy', help_text='Default seat class preference', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='state_province',
            field=models.CharField(blank=True, help_text='State or Province', max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='emailverificationcode',
            name='code',
            field=models.CharField(db_index=True, max_length=6),
        ),
        migrations.AlterField(
            model_name='emailverificationcode',
            name='expires_at',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(db_index=True, max_length=254, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, help_text='Example: +1234567890 or +380501234567', max_length=20, null=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number')]),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('admin', 'Admin'), ('staff', 'Staff'), ('user', 'User'), ('premium', 'Premium User')], db_index=True, default='user', max_length=10),
        ),
        migrations.AddIndex(
            model_name='emailverificationcode',
            index=models.Index(fields=['email', 'code_type', 'is_used'], name='email_verif_email_edf78a_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationcode',
            index=models.Index(fields=['expires_at', 'is_used'], name='email_verif_expires_5e3702_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='users_role_0ace22_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='users_created_6541e9_idx'),
        ),
        migrations.AddIndex(
            model_name='loginattempt',
            index=models.Index(fields=['email', 'created_at'], name='login_attem_email_61a0cd_idx'),
        ),
        migrations.AddIndex(
            model_name='loginattempt',
            index=models.Index(fields=['ip_address', 'created_at'], name='login_attem_ip_addr_f68fb5_idx'),
        ),
        migrations.AddIndex(
            model_name='loginattempt',
            index=models.Index(fields=['status', 'created_at'], name='login_attem_status_6c1d17_idx'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
    ]
